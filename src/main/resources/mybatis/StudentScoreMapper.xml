<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.studentmanage.mapper.StudentScoreMapper">
    <resultMap id="BaseResultMap" type="com.demo.studentmanage.model.StudentScore">
        <id column="id" property="id" javaType="INTEGER"/>
        <result column="score" property="score" jdbcType="INTEGER" />
        <result column="student_id" property="studentId" jdbcType="INTEGER" />
        <result column="subject_id" property="subjectId" jdbcType="INTEGER" />
    </resultMap>

    <resultMap id="SchoolScoreResultMap" type="com.demo.studentmanage.model.exclude.SchoolScore">
        <result column="score" property="score" jdbcType="INTEGER" />
        <result column="teacher_id" property="teacherId" jdbcType="INTEGER" />
        <result column="subject_id" property="subjectId" jdbcType="INTEGER" />
    </resultMap>
    
    <select  id="listScorePage" resultMap="BaseResultMap" parameterType="com.demo.studentmanage.dto.StudentScoreDto">
        SELECT score, subject_id FROM score
        WHERE student_id = #{studentScore.studentId}
        AND school_year = #{studentScore.schoolYear}
        LIMIT #{studentScore.start}, #{studentScore.size}
    </select>

    <select id="findByCondition" resultMap="BaseResultMap" parameterType="com.demo.studentmanage.dto.StudentScoreDto">
        SELECT id FROM score
        WHERE student_id = #{studentScore.studentId}
        AND subject_id = #{studentScore.subjectId}
        AND school_year = #{studentScore.schoolYear}
        limit 1
    </select>

    <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        SELECT id from score WHERE id = #{id}
    </select>

    <insert id="saveStudentScore" parameterType="com.demo.studentmanage.dto.StudentScoreDto">
        INSERT INTO score
        (student_id, score, subject_id, school_year)
        VALUES
        (#{studentScore.studentId}, #{studentScore.score}, #{studentScore.subjectId}, #{studentScore.schoolYear})
    </insert>

    <update id="updateStudentScore" parameterType="com.demo.studentmanage.dto.StudentScoreDto">
        UPDATE score
        SET student_id = #{studentScore.studentId,jdbcType=INTEGER},
            score = #{studentScore.score,jdbcType=INTEGER},
            subject_id = #{studentScore.subjectId,jdbcType=INTEGER},
            school_year = #{studentScore.schoolYear,jdbcType=VARCHAR}
        WHERE id = #{studentScore.id,jdbcType=INTEGER}
    </update>

    <delete id="deleteStudentScore" parameterType="java.lang.Integer">
        DELETE FROM score WHERE id = #{id}
    </delete>

    <select id="listSubjectAvgScore" resultMap="SchoolScoreResultMap" parameterType="com.demo.studentmanage.model.exclude.SchoolScore">
        SELECT AVG(score) as score ,subject_id FROM score
        WHERE school_year = #{schoolScore.schoolYear}
        GROUP BY subject_id
        LIMIT #{schoolScore.start}, #{schoolScore.size}
    </select>

    <select id="listSubjectMaxScore" resultMap="SchoolScoreResultMap" parameterType="com.demo.studentmanage.model.exclude.SchoolScore">
        SELECT MAX(score) as score ,subject_id FROM score
        WHERE school_year = #{schoolScore.schoolYear}
        GROUP BY subject_id
        LIMIT #{schoolScore.start}, #{schoolScore.size}
    </select>

    <select id="listSubjectMinScore" resultMap="SchoolScoreResultMap" parameterType="com.demo.studentmanage.model.exclude.SchoolScore">
        SELECT MIN(score) as score ,subject_id FROM score
        WHERE school_year = #{schoolScore.schoolYear}
        GROUP BY subject_id
        LIMIT #{schoolScore.start}, #{schoolScore.size}
    </select>
</mapper>